# Quarkus config
quarkus.swagger-ui.always-include=true
# quarkus.ssl.native=true
# quarkus.kafka.devservices.shared=true

kafka.bootstrap.servers=amq-streams-cluster-kafka-bootstrap.kafka-streaming.svc.cluster.local:9092

quarkus.openshift.expose=true
quarkus.openshift.name=quarkus-dmn-score
quarkus.openshift.part-of=quarkus-dmn-score
quarkus.kubernetes-client.trust-certs=true

# Configure the Kafka source (we read from it)
mp.messaging.incoming.scorestream.group.id=quarkus-dmn-score-stream
mp.messaging.incoming.scorestream.connector=smallrye-kafka
mp.messaging.incoming.scorestream.topic=processed-dmn
mp.messaging.incoming.scorestream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.scorestream.broadcast=true

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.kogito_outgoing_stream.group.id=quarkus-dmn-score
mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka
mp.messaging.outgoing.kogito_outgoing_stream.topic=processed-dmn
mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.kogito_incoming_stream.group.id=quarkus-dmn-score
mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka
mp.messaging.incoming.kogito_incoming_stream.topic=dmn-topic
mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kogito_incoming_stream.broadcast=true
